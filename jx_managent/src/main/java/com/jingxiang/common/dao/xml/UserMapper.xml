<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingxiang.common.dao.UserMapper">
    <resultMap id="UserResultMap" type="com.jingxiang.common.entity.User">
        <result column="open_id" property="openId"/>
        <result column="session_key" property="sessionKey"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="del_flag" property="delFlag"/>
        <result column="nick_name" property="nickName"/>
        <result column="avatar_url" property="avatarUrl"/>
    </resultMap>

	<parameterMap type="com.jingxiang.common.entity.User" id="UserParameterMap">
        <parameter resultMap="open_id" property="openId"/>
        <parameter resultMap="session_key" property="sessionKey"/>
        <parameter resultMap="create_date" property="createDate"/>
        <parameter resultMap="update_date" property="updateDate"/>
       <parameter resultMap="del_flag" property="delFlag"/>
        <parameter resultMap="nick_name" property="nickName"/>
        <parameter resultMap="avatar_url" property="avatarUrl"/>
	 </parameterMap>
 
  
    <insert id="insert" parameterMap="UserParameterMap" >
        INSERT INTO user(
          id,
		  open_id,
		  session_key,
		  nick_name,
		  avatar_url,	  		  		 
		  create_date,
		  creator,
		  update_date,
		  modifier,
		  del_flag) VALUES(
        #{id},
        #{openId},
        #{sessionKey},
        #{nickName},
        #{avatarUrl},       
        #{createDate},
        #{creator},
        #{updateDate},
        #{modifier},
        #{delFlag}
        )
    </insert>
    
    
    <update id="deleteById">
        UPDATE user
        SET
        del_flag = 1,
        update_date = #{updateDate},
        modifier = #{modifier}
        WHERE id = #{id}
    </update>


    <!--根据entity自定义条件删除-->
    <update id="delete" parameterMap="UserParameterMap">
        update  user
        set
        del_flag = 1,
        update_date = #{updateDate},
        modifier = #{modifier}
        WHERE
        <if test="nickName != null">
            nick_name = #{nickName}
        </if>
    </update>

    
    <!--根据id更新用户信息-->
    <update id="update" parameterMap="UserParameterMap">
        UPDATE  user
        <set>         
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl},
            </if>         
            <if test="modifier != null">
                modifier = #{modifier},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate}
            </if>
        </set>
        WHERE
        id = #{id}
    </update>
    

    <!--根据entity自定义条件查询-->
    <select id="findList" resultMap="UserResultMap">
    	select * from user
    	where del_flag = 0
        
        <if test="nickName != null">
            AND  nick_name like  CONCAT('%', #{nickName}, '%')
        </if>
      
        <if test="orderBy ==null">
        	order by create_date desc
        </if>       
    </select>
    
    <!--根据id查询单条数据-->
    <select id="get" resultMap="UserResultMap">
    	select * from user 
    	where 
    	id = #{id}
    </select>

    <!--查找所有数据-->
    <select id="findAllList" resultMap="UserResultMap">
        SELECT * from user
        where del_flag = 0
    </select>


    <!--检查用户是否存在于user表-->
    <select id="checkExist" resultMap="UserResultMap">
        SELECT *
        FROM `user`
        WHERE
           del_flag = 0
        AND open_id = #{openId}
     </select>
</mapper>


